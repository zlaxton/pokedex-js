let pokemonRepository = (function () {
  let t = [],
    e = "https://pokeapi.co/api/v2/pokemon/?limit=150",
    n = document.querySelector("#search-bar");
  function i(e) {
    "object" == typeof e ? t.push(e) : alert("pokemon is not correct");
  }
  function o(t) {
    let e = t.detailsUrl;
    return fetch(e)
      .then(function (t) {
        return t.json();
      })
      .then(function (e) {
        (t.imageUrlFront = e.sprites.front_default),
          (t.imageUrlBack = e.sprites.back_default),
          (t.height = e.height),
          (t.weight = e.weight),
          (t.abilities = e.abilities),
          (t.types = e.types);
      })
      .catch(function (t) {
        console.error(t);
      });
  }
  function a(t) {
    let e = $(".modal-body"),
      n = $(".modal-title");
    n.empty(), e.empty();
    let i = $("<h1>" + t.name + "</h1>"),
      o = $('<img class="modal-img" style="width:50%">');
    o.attr("src", t.imageUrlFront);
    let a = $('<img class="modal-img" style="width:50%">');
    a.attr("src", t.imageUrlBack);
    let l = $("<p>height : " + t.height + "</p>"),
      r = $("<p>weight : " + t.weight + "</p>"),
      p = $("<p>abilities : " + t.abilities + "</p>"),
      s = $("<p>types : " + t.types.map((t) => t.type.name) + "</p>");
    n.append(i),
      e.append(o),
      e.append(a),
      e.append(l),
      e.append(r),
      e.append(p),
      e.append(s);
  }
  return (
    n.addEventListener("input", function () {
      let t = document.querySelectorAll("li"),
        e = n.value.toUpperCase();
      t.forEach(function (t) {
        t.innerText.toUpperCase().indexOf(e) > -1
          ? (t.style.display = "")
          : (t.style.display = "none");
      });
    }),
    {
      add: i,
      getAll: function () {
        return t;
      },
      addListItem: function (t) {
        let e = document.querySelector(".list-group"),
          n = document.createElement("li");
        n.classList.add("group-list-item");
        let i = document.createElement("button");
        (i.innerText = t.name),
          i.classList.add("btn", "btn-outline-warning", "btn-lg"),
          i.setAttribute("data-target", "#pokemonModal"),
          i.setAttribute("data-toggle", "modal"),
          i.setAttribute("style", "color: #4b0082"),
          n.appendChild(i),
          e.appendChild(n),
          i.addEventListener("click", function () {
            !(function (t) {
              o(t).then(function () {
                a(t);
              });
            })(t);
          });
      },
      loadList: function () {
        return fetch(e)
          .then(function (t) {
            return t.json();
          })
          .then(function (t) {
            t.results.forEach(function (t) {
              i({ name: t.name, detailsUrl: t.url });
            });
          })
          .catch(function (t) {
            console.error(t);
          });
      },
      loadDetails: o,
      showModal: a,
    }
  );
})();
pokemonRepository.loadList().then(function () {
  pokemonRepository.getAll().forEach(function (t) {
    pokemonRepository.addListItem(t);
  });
});
